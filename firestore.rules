rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection - users can only access their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Daily symptom logs - users can only access their own data
    match /dailySymptomLogs/{logId} {
      allow read, write: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid;
    }
    
    // AI companions - users can only access their own companions
    match /aiCompanions/{companionId} {
      allow read, write: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid;
    }
    
    // Conversation history - users can only access their own conversations
    match /conversationHistory/{messageId} {
      allow read, write: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid;
    }
    
    // AI health insights - users can only access their own insights
    match /aiHealthInsights/{insightId} {
      allow read, write: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid;
    }
    
    // Community posts - authenticated users can read all, write their own
    match /communityPosts/{postId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        resource.data.authorId == request.auth.uid;
      allow create: if request.auth != null && 
        request.resource.data.authorId == request.auth.uid;
    }
    
    // Challenges - authenticated users can read all
    match /challenges/{challengeId} {
      allow read: if request.auth != null;
      allow write: if false; // Only admin can create challenges
    }
    
    // User challenges - users can only access their own challenges
    match /userChallenges/{userChallengeId} {
      allow read, write: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid;
    }
    
    // Achievements - authenticated users can read all
    match /achievements/{achievementId} {
      allow read: if request.auth != null;
      allow write: if false; // Only admin can create achievements
    }
    
    // User achievements - users can only access their own achievements
    match /userAchievements/{userAchievementId} {
      allow read, write: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid;
    }
    
    // Point activities - users can only access their own activities
    match /pointActivities/{activityId} {
      allow read, write: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid;
    }
    
    // Chat rooms - users can access rooms they're members of
    match /chatRooms/{roomId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        request.auth.uid in resource.data.members;
      allow create: if request.auth != null;
    }
    
    // Chat room members - authenticated users can read, modify their own membership
    match /chatRoomMembers/{memberId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid;
    }
    
    // Chat messages - users can read messages in rooms they're in, write their own
    match /chatMessages/{messageId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        resource.data.senderId == request.auth.uid;
      allow create: if request.auth != null && 
        request.resource.data.senderId == request.auth.uid;
    }
    
    // Anonymized research data - authenticated users can contribute
    match /anonymizedResearchData/{dataId} {
      allow read: if false; // Research data is private
      allow write: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid;
    }
    
    // Leaderboard - authenticated users can read
    match /leaderboard/{entryId} {
      allow read: if request.auth != null;
      allow write: if false; // System managed
    }
    
    // Symptom patterns - users can only access their own patterns
    match /symptomPatterns/{patternId} {
      allow read, write: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid;
    }
    
    // Symptom correlations - users can only access their own correlations
    match /symptomCorrelations/{correlationId} {
      allow read, write: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid;
    }
    
    // Symptom wheel entries - users can only access their own entries
    match /symptomWheelEntries/{entryId} {
      allow read, write: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid;
    }
  }
}