rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read and write their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // User profiles can be read by authenticated users (for community features)
    match /userProfiles/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Symptom logs are private to each user
    match /symptomLogs/{userId}/logs/{logId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Food logs are private to each user
    match /foodLogs/{userId}/logs/{logId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // User challenges are private to each user
    match /userChallenges/{userId}/challenges/{challengeId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // User achievements are private to each user
    match /userAchievements/{userId}/achievements/{achievementId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // User points are private to each user
    match /userPoints/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Luna configurations are private to each user
    match /lunaConfigs/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // AI conversations are private to each user
    match /aiConversations/{userId}/messages/{messageId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Community forum posts - public read, authenticated write
    match /forumPosts/{postId} {
      allow read: if true;
      allow create: if request.auth != null && request.auth.uid == resource.data.authorId;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.authorId;
    }
    
    // Forum comments - public read, authenticated write
    match /forumComments/{commentId} {
      allow read: if true;
      allow create: if request.auth != null && request.auth.uid == resource.data.authorId;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.authorId;
    }
    
    // Community insights - public read only
    match /communityInsights/{insightId} {
      allow read: if true;
      allow write: if false; // Only backend processes can write insights
    }
    
    // Research contributions - anonymized data, read-only for users
    match /researchContributions/{contributionId} {
      allow read: if request.auth != null;
      allow write: if false; // Only backend processes can write research data
    }
    
    // Daily prompts - read-only for users
    match /dailyPrompts/{promptId} {
      allow read: if request.auth != null;
      allow write: if false; // Only backend processes can update prompts
    }
    
    // Default deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}